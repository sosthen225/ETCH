"""
Django settings for ETCH project.

Generated by 'django-admin startproject' using Django 5.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

import os
from pathlib import Path
from pyexpat.errors import messages

import dj_database_url

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-l_joj2pd+ovv&7kb2^9gj#3h_6(dy$y*-c^szk!ih+ry!xo-c+'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.environ.get('DEBUG', 'False') == 'True'
#DEBUG = True

#ALLOWED_HOSTS = [os.environ.get('ALLOWED_HOSTS', 'https://etch-scoi.onrender.com')]
ALLOWED_HOSTS = ['192.168.1.16', 'localhost', '127.0.0.1']


if not DEBUG:
    # Assurez-vous que cette liste est vide si ALLOWED_HOSTS n'est pas défini via ENV
    # ou contienne votre domaine Render une fois connu.
    # Exemple: ALLOWED_HOSTS.append('mon-app-django.onrender.com')
    pass # Render injectera l'hôte si la variable est vide

#message d'erreur et de succes
MESSAGE_TAGS = {
    # ...
    'debug': True,
    'info': True,
    'success': True,
    'warning': True,
    'error': True,
    # ...
}

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'Geequipe',
    'django_seed',
]

MIDDLEWARE = [
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'ETCH.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'Templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'ETCH.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME':'db.sqlite3',
#         # 'USER' : 'postgres',
#         # 'PASSWORD': 'etech@2025',
#         # 'HOST': 'localhost',
#         # 'PORT': '5432',
#     }
# }

DATABASES = {
    'default': dj_database_url.config(
        default='sqlite:///db.sqlite3',
        conn_max_age=600
    )
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]
 
LOGIN_REDIRECT_URL = '/accueil/'

# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'fr-FR'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
#WHITE_NOISE_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'
# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Fichiers média (contenu téléchargé par l'utilisateur, comme les PDF)
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media') # Ceci va créer un dossier 'media' à la racine de votre projet

# settings.py

USE_TZ = True # Ce paramètre doit être à True pour utiliser les fonctionnalités de fuseau horaire de Django

# Définissez votre fuseau horaire. Pour l'heure locale en Côte d'Ivoire, c'est 'Africa/Abidjan'.
TIME_ZONE = 'Africa/Abidjan'

# LANGUAGE_CODE et USE_I18N sont aussi utiles pour l'internationalisation
LANGUAGE_CODE = 'fr-fr' # Langue par défaut de votre site
USE_I18N = True # Active le système de traduction de Django


EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'gsosthen2@gmail.com'
EMAIL_HOST_PASSWORD = 'mot-de-passe-app-gmail'
DEFAULT_FROM_EMAIL = 'Geequipe ETECHNOLOGIE Afrique <gsosthen2@gmail.com>'